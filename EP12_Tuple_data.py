# ชนิดข้อมูล Tuple ทูเปิล & ทับเปิล

'''
คุณสมบัติ
คล้ายๆ list สามารถเก็บข้อมูลได้หลาย ชนิด 

สิ่งที่แตกต่างจาก list 
list ข้อมูลสมาชิก สามารถเปลี่ยนแปลงได้
tuple ข้อมูลสมาชิก ไม่สามารถเปลี่ยนแปลงได้ 

Ex. ข้อมูลที่ไม่สามารถเปลี่ยนแปลงได้ ข้อมูลแบบ tuple 
 ID รหัสบัตร ปชช ข้อมูลค่าคงที่ <= ไม่สามารถแก้ไขได้ 

'''
# การนิยาม tuple แบบทั่วไป
tup=(1,2,3,4,"พชร","มะม่วง",True,3.99) # tuple
lis=[1,2,3,4,"พชร","มะม่วง",True,3.99] # list 

lis[0]="กทม" # การเปลี่ยนแปลงข้อมูลในตัวแปร list เข้าถึงข้อมูลผ่าน index[]
# ข้อมูลสมาชิกของ list สามารถเปลี่ยนแปลงได้

# ส่วนของ tuple  ไม่สามารถแก้ไขได้เลย

print(type(tup))
print(type(lis))

# การนิยาม constructer ด้วยการ ชื่อ=ตัวแปร((ชนิดข้อมูล))
tup2=tuple((1,2,3,4,"พชร","มะม่วง",True,3.99)) # tuple
lis2=list([1,2,3,4,"พชร","มะม่วง",True,3.99]) # list 

print(type(tup2))
print(type(lis2))

# -------------------------------------
# การเข้าถึงข้อมูล
tup3=(1,2,3,4,"พชร","มะม่วง",True,3.99) # tuple

print(tup[0:1]) # หากต้องการระบุตำแหน่งต้อง index[] 
# 0 -> ...
# ... <- -1

# -------------------------------------
# การเข้าถึงข้อมูลแบบกำหนดช่วง (slice)

tup4=(1,2,3,4,"พชร","มะม่วง",True,3.99) # tuple
print(tup4[1:4])

# -------------------------------------
# การแก้ไขข้อมูลในตัวแปร tuple ** ทำงานคู่กับ list
tup5=(1,2,3,4,"พชร","มะม่วง",True,3.99) # tuple
print("ก่อนแก้ไข = ",tup5)

# ถ้าอยากแก้ไขให้แปลงข้อมูลเป็น list
lis3=list(tup5) # แปลง tiple เป็น list 
lis3[0]="กรุงเทพ"
tup5=tuple(lis3) # แปลงกลับมาเป็น tuple

print("หลังแก้ไขข้อมูลแล้ว = ",tup5)

# -------------------------------------
# แสดงผลด้วย loop
tup6=(1,2,3,4,"พชร","มะม่วง",True,3.99) # tuple

for item in tup6:
    print("สมาชิก = ",item)

# -------------------------------------
# การตรวจสอบข้อมูล เช็คข้อมูลสมาชิกภานในข้อมูล
tup7=(1,2,3,4,"พชร","มะม่วง",True,3.99) # tuple

if "พชร" in tup7:
    print("เป็นสมาชิก")
else :
    print("ไม่เป็นสมาชิก")
# ใช้ if else ในการตรวจสอบ

# -------------------------------------
#  นับจำนวนสมาชิก (len)
